#!/bin/bash

defaultmodel=$(dirname $0)/allamas_sorted_by_size.txt

echo_usage() {
  echo "Usage: ai [replay] <prompt> [<model> (default: $defaultmodel)]"
}

# test whether at least one argument (the prompt) is provided
if [ $# -lt 1 ]; then
  echo_usage
  exit 1
fi

prompt=$1

if [ "$prompt" == "replay" ]; then # lookup the actual prompt in the curated list
  shift
  if [ $# -lt 1 ]; then # test whether the prompt keyword is provided
    echo_usage
    echo "          ( missing prompt keyword after 'replay' )"
    exit 1
  fi
  keyword=$1
  prompt="$(grep $keyword $(dirname $0)/ai-prompts-curated.txt)"
  if [ -z "$prompt" ]; then
    echo -e "\e[31mKeyword '$keyword' not found in ai-prompts-curated.txt\e[0m\n" >&2
    exit 1
  fi
  isreplay=true
fi

model=$2
if [ -z "$model" ]; then
  model=$defaultmodel
fi

# add the prompt to the prompts file ONLY if it wasn't already there
# and if we are not in replay mode alredy
if [ -z "$isreplay" ]; then
  if ! grep -Fq "$prompt"   ai-prompts.txt; then
            echo $prompt >> ai-prompts.txt
            echo         >> ai-prompts.txt
            echo -e "\033[3;37m(new prompt added to ai-prompts.txt)\033[0m" >&2
  else
            echo -e "\033[3;37m(prompt already in ai-prompts.txt)  \033[0m" >&2
  fi
else
  echo -e "\033[3;37mai \"$prompt\" $model\033[0m"
fi

ai_run_one() {
  defaultmodel=tinyllama

  # test whether at least one argument is provided
  if [ $# -lt 1 ]; then
    echo "Usage: ai <prompt> [<modelname>|<modelfile> (default: $defaultmodel)]"
    exit 1
  fi

  prompt=$1

  model=$2
  if [ -z "$model" ]; then
    model=$defaultmodel
  fi

  if [[ $model == gpt* ]]; then
    provider="openai-run"
  else
    provider="ollama-run"
  fi

  echo -e "\033[3;37m$provider $model\033[0m"

  $provider $model "$prompt"
}

echo # blank line to separate responses from the command line

if [ -f "$model" ]; then

  models=$model

  while read model; do ai_run_one "$prompt" $model; done < $models

else # $model is not a file but a specific model name

                       ai_run_one "$prompt" $model

fi # end if $model is a file

# BONUS: ANSI escape codes for text formatting
# 30	Black
# 31	Red
# 32	Green
# 33	Yellow
# 34	Blue
# 35	Magenta
# 36	Cyan
# 37	White
# 90	Bright Black
# 91	Bright Red
# 92	Bright Green
# 93	Bright Yellow
# 94	Bright Blue
# 95	Bright Magenta
# 96	Bright Cyan
# 97	Bright White
# 39	Default foreground color
# 49	Default background color
# 38;5;0 to 38;5;255	256-color mode foreground color
# 48;5;0 to 48;5;255	256-color mode background color
# 38;2;R;G;B to 38;2;R;G;B	True color foreground color
# 48;2;R;G;B to 48;2;R;G;B	True color background color
# 0	Reset / Normal
# 1	Bold or increased intensity
# 2	Faint (decreased intensity)
# 3	Italic
# 4	Underline
